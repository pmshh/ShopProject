// 1. queryDsl version 정보 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.4'
	// (2) queryDSL 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id "com.moowork.node" version "1.3.1" // npm plugin
}

group = 'com.windsome'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal() // https://plugins.gradle.org/m2/
	maven {url 'https://jitpack.io'} // 아임포트 관련
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-configuration-processor:3.2.0'
	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
	// modelmapper
	implementation 'org.modelmapper:modelmapper:2.4.2'
	// lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	// QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
	// npm
	implementation "com.moowork.gradle:gradle-node-plugin:1.3.1"
	// 아임포트 결제 api
	implementation "com.github.iamport:iamport-rest-client-java:0.2.21"
	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// h2
	runtimeOnly 'com.h2database:h2'
	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

// (4) queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
// 여기까지

/**
 * npm install start
 */

apply plugin: "com.moowork.node"
// npm using on gradle project
tasks.register("npm-Install") {
	group = "application"
	description = "Installs dependencies from package.json"
	tasks.appNpmInstall.exec()
}

task appNpmInstall(type: NpmTask) {
	// src/main/resources/static
	description = "Installs dependencies from package.json"
	workingDir = file("/src/main/resources/static")
	args = ['install']
}